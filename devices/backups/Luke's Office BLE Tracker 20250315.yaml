####################################
# Start Substitutions
####################################

substitutions:
# Replace name with you sensor name
  name: lukes-office-ble-tracker
  friendly_name: "Luke's Office BLE Tracker"
  comment_text: "Generally Unstable and Poorly Produced Inventions - Bluetooth Low Energy Tracker for room presence applications"
  project_name: "GUPPI.BLE-tracker"
  project_version: "25.2.25.1"
# **IMPORTANT** - Add API key here for copy/paste convenience
  api_key: "lp2ez5/dTzyQbYgaH4Kq+dWP3/5DWiBp/gdQILW96YI="

####################################
# End Substitutions
####################################

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  comment: "${comment_text}"
  project: 
    name: "${project_name}"
    version: "${project_version}"

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: esp-idf
    sdkconfig_options:
      # @grigi found in testing that these options resulted in better responsiveness.
      # BLE 4.2 is supported by ALL ESP32 boards that have bluetooth, the original and derivatives.
      CONFIG_BT_BLE_42_FEATURES_SUPPORTED: y
      # Also enable this on any derivative boards (S2, C3 etc) but not the original ESP32.
      CONFIG_BT_BLE_50_FEATURES_SUPPORTED: y
      # Extend the watchdog timeout, so the device reboots if the device appears locked up for over 10 seconds.
      CONFIG_ESP_TASK_WDT_TIMEOUT_S: "10"

# Enable logging at DEBUG level for detailed output during development
logger:
  # 0 Enables logging, but disables serial-port logging to free CPU and memory
  baud_rate: 0
  #  Disable DEBUG after testing
#  level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: "${api_key}"
  # Only enable BLE tracking when wifi is up and api is connected
  # Gives single-core ESP32-C3 devices time to manage wifi and authenticate with api
  on_client_connected:
     - esp32_ble_tracker.start_scan:
        continuous: true
  # Disable BLE tracking when there are no api connections live
  on_client_disconnected:
    if:
      condition:
        not:
          api.connected:
      then:
        - esp32_ble_tracker.stop_scan:

ota:
  - platform: esphome
    # Optional, but recommended to use a unique password for OTA updates
    #id: ota_esphome
    #password: "3a2475218149b7b2d9075526053f68d2"

wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  - ssid: !secret wifi_2_ssid
    password: !secret wifi_2_password
  - ssid: !secret wifi_3_ssid
    password: !secret wifi_3_password
  output_power: 8.5dB

# Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name}"
    password: !secret fallback_ap_password

# Web server (optional, consider disabling in production)
#web_server:
#  port: 80

# Bluetooth Tracker & Proxy configuration
# Use esp-idf platform if possible - not arduino - for better memory management
esp32_ble_tracker:
  scan_parameters:
    # Don't auto start BLE scanning, we control it in the `api` block's automation.
    continuous: False
    
    active: True  # send scan-request packets to gather more info, like device name for some devices.

    interval: 320ms  # default 320ms - how long to spend on each advert channel
    window:   300ms  # default 30ms - how long to actually "listen" in each interval. Reduce this if device is unstable.
    # If the device cannot keep up or becomes unstable, reduce the "window" setting. This may be
    # required if your device is controlling other sensors or doing PWM for lights etc.

bluetooth_proxy:
  # Allows outbound connections from HA to devices.
  active: true

captive_portal:


################################################################################
# Basic diagnostic sensors
################################################################################

sensor:
  # Standard Diagnostic Sensors
  - platform: uptime
    name: "Device Uptime"
    id: sys_uptime
    update_interval: 60s
    entity_category: "diagnostic"
  - platform: wifi_signal
    name: "WiFi Signal Strength"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"


################################################################################
# Text Sensors for Diagnostics and Derived Information
################################################################################
text_sensor:
  # Device IP Address
  - platform: wifi_info
    ip_address:
      name: "Device IP Address"
  # Firmware Version (optional)
  - platform: version
    name: "Firmware Version"

################################################################################
# Button Component to Restart the Device
################################################################################
button:
  - platform: restart
    icon: mdi:power-cycle
    name: "Reboot Sensor"
