# esp32:
#   framework:
#     type: esp-idf
#     sdkconfig_options:
      # @grigi found in testing that these options resulted in better responsiveness.
      # BLE 4.2 is supported by ALL ESP32 boards that have bluetooth, the original and derivatives.
## Moved BLE 4.2 and 5.0 to the board config files, so they can be enabled on all boards that support it.
#      CONFIG_BT_BLE_42_FEATURES_SUPPORTED: y
      # Also enable this on any derivative boards (S2, C3 etc) but not the original ESP32.
#      CONFIG_BT_BLE_50_FEATURES_SUPPORTED: y
      # Extend the watchdog timeout, so the device reboots if the device appears locked up for over 10 seconds.
      # CONFIG_ESP_TASK_WDT_TIMEOUT_S: "10"

api:
  # Only enable BLE tracking when wifi is up and api is connected
  # Gives single-core ESP32-C3 devices time to manage wifi and authenticate with api
  on_client_connected:
     - esp32_ble_tracker.start_scan:
        continuous: true
  # Disable BLE tracking when there are no api connections live
  on_client_disconnected:
    if:
      condition:
        not:
          api.connected:
      then:
        - esp32_ble_tracker.stop_scan:

# Bluetooth Tracker & Proxy configuration
# Use esp-idf platform - not arduino
# Disable web server - don't use both at the same time
esp32_ble_tracker:
  scan_parameters:
    # Don't auto start BLE scanning, we control it in the `api` block's automation.
    continuous: False
    # required if your device is controlling other sensors or doing PWM for lights etc.
    active: True  # send scan-request packets to gather more info, like device name for some devices.
    # If the device cannot keep up or becomes unstable, reduce the "window" setting. This may be
    interval: 320ms
    window: 100ms

bluetooth_proxy:
  active: true
