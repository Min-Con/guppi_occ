####################################
# Start Substitutions
####################################

substitutions:
  # UART pins - ESP32-C6 Zero UART pins
  # ESP32-C6 has 2 full UART controllers (UART0, UART1) + an LP_UART (for low power)
  # UART0 is typically used for console/boot; using UART1 for user peripherals
  tx_pin_uart: GPIO16  # UART1 TX (default-mapped and avoids strapping pins)
  rx_pin_uart: GPIO17  # UART1 RX (default-mapped and avoids strapping pins)
  # Alternative hardware UART pins:
  # tx_pin_uart: GPIO5   # Alternative (but note: strap/JTAG pin; use with caution after boot)
  # rx_pin_uart: GPIO4   # Alternative (but note: strap/JTAG pin; use with caution after boot)
  # Note: LP_UART exists in the LP domain with fixed LP_GPIO mapping and is intended for low-power use.

  # LED/Light GPIO - ESP32-C6 Zero LED configuration
  # The board has an onboard WS2812B RGB LED (single pixel) on GPIO8 (DIN)
  light_gpio: GPIO8    # Onboard WS2812B RGB LED data-in (DIN)

  # ADC pin - ESP32-C6 ADC pins
  # ESP32-C6 has 7 ADC channels on ADC1 (GPIO0-GPIO6)
  # ADC1 is the only ADC unit and works reliably with WiFi
  mic_adc: GPIO2       # ADC1_CH2 - ADC input pin

  # Motion sensor GPIO - Using available safe GPIO pins
  # Selected from pins that are safe and not used for critical functions
  motion_gpio: GPIO7   # Safe GPIO pin for digital input (NOT used by onboard LED)

  # I2C pins - ESP32-C6 Zero I2C pins
  # ESP32-C6 can route I2C to many GPIOs; this board breaks out GPIO21/22 and they are commonly used
  sda_pin_i2c: GPIO21  # I2C SDA (broken out on ESP32-C6 Zero header)
  scl_pin_i2c: GPIO22  # I2C SCL (broken out on ESP32-C6 Zero header)
  # Alternative I2C pins that are also available:
  # sda_pin_i2c: GPIO0
  # scl_pin_i2c: GPIO1

  # BROKEN-OUT GPIO pins on ESP32-C6 Zero (per board pinout):
  # Exposed on board headers: GPIO0..GPIO23 (most), including 18..21 (labeled with FSPI functions)
  # Not broken out on this board: GPIO24..GPIO30
  # Note: The pinout labels FSPI on GPIO18..GPIO21; on this board variant with in-package flash,
  #       these pins are available as GPIO, but observe peripheral conflicts if you enable external SPI.

  # SAFE GPIO pins for general use:
  # GPIO0, GPIO1, GPIO2, GPIO3, GPIO4*, GPIO5*, GPIO6, GPIO7, GPIO9, GPIO10, GPIO11, GPIO12†, GPIO13†,
  # GPIO14, GPIO15, GPIO16, GPIO17, GPIO18, GPIO19, GPIO20, GPIO21, GPIO22, GPIO23
  # *GPIO4/5: strap/JTAG-related; fine after boot but avoid external pulls during reset.
  # †GPIO12/13: USB D-/D+ for the on-chip USB Serial/JTAG; avoid repurposing if using USB console.

  # ADC-capable input pins (ESP32-C6 has single ADC unit):
  # ADC1: GPIO0-GPIO6 (7 channels) - These work reliably with WiFi

  # CRITICAL: Pins to AVOID or use with caution:
  # GPIO8/9  - Boot strapping pins; avoid external pulls during reset
  # GPIO4-7  - JTAG interface pins (can be repurposed after boot if JTAG not in use)
  # GPIO12/13- USB D-/D+ (used by USB Serial/JTAG)
  # GPIO24-GPIO30 - Not broken out on this board

  # Strapping pins (affect boot behavior if pulled during reset):
  # GPIO8, GPIO9 - boot mode straps
  # MTMS/MTDI (GPIO4/GPIO5) - sampled for SDIO timing; can be used after boot with care

  # Alternative pin configurations:
  # Alternative UART pins:
  # tx_pin_uart: GPIO18
  # rx_pin_uart: GPIO19

  # Alternative I2C pins:
  # sda_pin_i2c: GPIO0
  # scl_pin_i2c: GPIO1

  # Alternative motion sensor pins:
  # motion_gpio: GPIO9
  # motion_gpio: GPIO10
  # motion_gpio: GPIO11

  # Alternative ADC pins (ADC1 channels only):
  # mic_adc: GPIO0       # ADC1_CH0
  # mic_adc: GPIO1       # ADC1_CH1
  # mic_adc: GPIO3       # ADC1_CH3
  # mic_adc: GPIO4       # ADC1_CH4
  # mic_adc: GPIO5       # ADC1_CH5
  # mic_adc: GPIO6       # ADC1_CH6

  # SPI pins configuration (if using external SPI devices):
  # Default hardware SPI2 (user SPI) pins (as labeled on the Zero):
  # mosi_pin: GPIO18  # SPI MOSI (FSPID)
  # miso_pin: GPIO19  # SPI MISO (FSPIQ)
  # sck_pin:  GPIO20  # SPI SCK  (FSPICLK)
  # cs_pin:   GPIO21  # SPI CS   (FSPICS0)

  # PWM capable pins: All GPIOs on ESP32-C6 support LEDC PWM
  # Hardware: 6 LEDC channels with up to 20-bit resolution

  # Touch sensor pins: ESP32-C6 does NOT have touch sensor capability
  # DAC pins: ESP32-C6 does NOT have DAC capability
  # Hall sensor: ESP32-C6 does NOT have hall sensor capability

  # Low Power (LP) I/O subsystem:
  # LP_GPIO0-LP_GPIO7 available for deep sleep wake and low power operations
  # These correspond to GPIO0-GPIO7 in low power mode

####################################
# End Substitutions
####################################

esphome:
  platformio_options:
    board_build.flash_mode: qio         # QIO mode for faster flash access (typical for ESP32-C6 modules)
    board_build.f_flash: 80000000L      # 80MHz flash frequency
    board_build.flash_size: 4MB         # Flash size (ESP32-C6 Zero is 4MB)
  on_boot:
    priority: 600
    then:
      - delay: 500ms  # Boot delay for sensor stabilization

esp32:
  # ESP32-C6 Zero board configuration
  # Using official Espressif devkit profile adapted for Zero form factor
  board: esp32-c6-devkitc-1
  variant: esp32c6
  flash_size: 4MB  # Standard size - ESP32-C6 Zero typically has 4MB flash
    framework:
      type: esp-idf
      version: recommended  # ESP32-C6 requires recent ESP-IDF for full feature support
      sdkconfig_options:
        # Performance optimizations
        CONFIG_COMPILER_OPTIMIZATION_PERF: y      # Performance optimization
        CONFIG_COMPILER_OPTIMIZATION_SIZE: y      # Size optimization (balanced)
        CONFIG_ESPTOOLPY_FLASHSIZE_4MB: y        # Match flash_size above

        # ESP32-C6 specific optimizations
        CONFIG_ESP32C6_DEFAULT_CPU_FREQ_160: y    # Set CPU to 160MHz (maximum)
        CONFIG_ESP32C6_REV_MIN: "0"              # Support all chip revisions
        CONFIG_ESP_PHY_ENABLE_USB: y             # Enable USB PHY support
        CONFIG_ESP_SYSTEM_PANIC_PRINT_REBOOT: y  # Print panic info before reboot

        # Boot time optimizations (for faster startup)
        CONFIG_BOOTLOADER_SKIP_VALIDATE_IN_DEEP_SLEEP: y  # Skip validation after deep sleep
        CONFIG_BOOTLOADER_SKIP_VALIDATE_ON_POWER_ON: y    # Skip validation on power on
        CONFIG_BOOTLOADER_LOG_LEVEL_NONE: n              # Keep boot logs for debugging

        # Bluetooth/BLE support - ESP32-C6 supports BLE 5.3
        CONFIG_BT_ENABLED: y
        CONFIG_BT_BLE_ENABLED: y
        CONFIG_BT_BLE_42_FEATURES_SUPPORTED: y
        CONFIG_BT_BLE_50_FEATURES_SUPPORTED: y

        # IEEE 802.15.4 / Thread support
        CONFIG_IEEE802154_ENABLED: y
        CONFIG_IEEE802154_RX_BUFFER_SIZE: "20"
        CONFIG_OPENTHREAD_ENABLED: y

        # Watchdog configuration
        CONFIG_ESP_TASK_WDT_TIMEOUT_S: "10"      # 10 second watchdog timeout
        CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0: y  # Monitor idle task
        CONFIG_ESP_INT_WDT_TIMEOUT_MS: "800"     # Interrupt watchdog timeout

        # USB Serial/JTAG configuration - ESP32-C6 has native USB Serial/JTAG
        CONFIG_ESP_CONSOLE_USB_SERIAL_JTAG: y           # Use USB Serial/JTAG console
        CONFIG_ESP_CONSOLE_USB_SERIAL_JTAG_ENABLED: y   # Enable USB Serial/JTAG
        CONFIG_ESP_CONSOLE_SECONDARY_NONE: y            # No secondary console

        # Power management - disabled for stability
        CONFIG_PM_ENABLE: n                        # Disable dynamic power management

        # Low power coprocessor configuration
        CONFIG_ULP_COPROC_ENABLED: y
        CONFIG_ULP_COPROC_TYPE_LP_CORE: y
        CONFIG_ULP_COPROC_RESERVE_MEM: "4096"

        # Network stack optimizations
        CONFIG_LWIP_TCP_MSS: "1436"
        CONFIG_LWIP_TCP_RECVMBOX_SIZE: "32"
        CONFIG_LWIP_UDP_RECVMBOX_SIZE: "32"
        CONFIG_LWIP_TCPIP_RECVMBOX_SIZE: "32"

# UART bus configuration - for external device communication
# Using hardware UART1 on safe GPIO pins
uart:
  id: uart_bus
  tx_pin: ${tx_pin_uart}  # GPIO16 - UART1 TX
  rx_pin: ${rx_pin_uart}  # GPIO17 - UART1 RX
  baud_rate: 256000       # High-speed UART communication
  parity: NONE
  stop_bits: 1
  data_bits: 8            # Standard 8-bit data
  # Note: Lower baud_rate to 115200 if experiencing communication issues
  # Hardware flow control available if needed:
  # rx_buffer_size: 256   # Increase buffer if receiving large amounts of data

# I2C configuration (optional - uncomment if using I2C sensors)
# ESP32-C6 can map I2C to many GPIOs; board breaks out 21/22, which are common defaults
# i2c:
#   id: i2c_bus
#   sda: ${sda_pin_i2c}   # GPIO21 - I2C data line (SDA)
#   scl: ${scl_pin_i2c}   # GPIO22 - I2C clock line (SCL)
#   scan: true            # Scan for devices on boot
#   frequency: 400kHz     # Fast mode I2C (100kHz for better compatibility)
#   # Optional: Configure I2C bus 2
#   # - id: i2c_bus2
#   #   sda: GPIO0
#   #   scl: GPIO1
#   #   frequency: 100kHz

# ADC sensor configuration (optional - uncomment if using analog sensor)
# ESP32-C6 has 7 ADC channels (GPIO0-GPIO6) with 12-bit resolution
# sensor:
#   - platform: adc
#     pin: ${mic_adc}     # GPIO2 - ADC1_CH2
#     name: "Analog Input"
#     update_interval: 60s
#     attenuation: auto   # Auto-select attenuation

# Internal temperature sensor (ESP32-C6 built-in; not mapped to ADC1 GPIO)
# sensor:
#   - platform: internal_temperature
#     name: "ESP32-C6 Temperature"
#     update_interval: 60s

# GPIO binary sensor (motion sensor example)
# binary_sensor:
#   - platform: gpio
#     pin:
#       number: ${motion_gpio}  # GPIO7
#       mode:
#         input: true
#         pullup: true          # Enable internal pullup resistor
#     name: "Motion Sensor"
#     device_class: motion
#     filters:
#       - delayed_on: 10ms      # Debounce filter
#       - delayed_off: 10ms

# Light configuration - Onboard WS2812 RGB LED control (GPIO8)
# ESP32-C6 Zero has a WS2812B RGB LED on GPIO8
light:
  - platform: esp32_rmt_led_strip
    rgb_order: GRB              # WS2812B color order
    pin: ${light_gpio}          # Onboard RGB LED pin (GPIO8)
    num_leds: 1                 # Single onboard LED
    chipset: ws2812             # WS2812B chipset
    id: rgb_status_light
    name: "RGB Status Light"
    restore_mode: ALWAYS_OFF
    effects:
      - addressable_rainbow:
          name: "Rainbow"
          speed: 10
          width: 50
      - addressable_color_wipe:
          name: "Color Wipe"
      - addressable_scan:
          name: "Scanner"
      - pulse:
          name: "Pulse"
      - strobe:
          name: "Strobe"
      - random:
          name: "Random"

# GPIO output for a discrete LED (NONE onboard; keep as reference only)
# output:
#   - platform: gpio
#     pin: ${light_gpio}  # Would be used for a discrete LED, but the onboard WS2812 is not a GPIO LED
#     id: light_output

# SPI configuration (optional - uncomment if using SPI devices)
# ESP32-C6 supports 2 SPI buses (SPI0/1 for flash, SPI2 for user)
# spi:
#   id: spi_bus
#   clk_pin: GPIO20   # SPI clock (FSPICLK)
#   mosi_pin: GPIO18  # SPI MOSI (FSPID)
#   miso_pin: GPIO19  # SPI MISO (FSPIQ)
#   # CS pins are defined per device
#   # Hardware SPI2 supports up to 80MHz clock

# PWM configuration example (all GPIO pins support LEDC PWM on ESP32-C6)
# output:
#   - platform: ledc
#     pin: GPIO5
#     id: pwm_output
#     frequency: 1000Hz
#     channel: 0
#     # ESP32-C6 supports 6 LEDC channels with up to 20-bit resolution

# Deep sleep configuration (optional - for battery powered applications)
# ESP32-C6 supports multiple wake sources including LP core
# deep_sleep:
#   run_duration: 60s
#   sleep_duration: 5min
#   wakeup_pin: GPIO0
#   wakeup_pin_mode: RISING

# Thread/Zigbee configuration (ESP32-C6 unique feature)
# Note: Thread/Zigbee support requires special ESPHome configuration
# and is mutually exclusive with WiFi/BLE in most cases

# Remote control receiver (ESP32-C6 has RMT peripheral)
# remote_receiver:
#   pin: GPIO3
#   dump: all
#   # RMT supports up to 4 TX and 4 RX channels

# Pulse counter (for frequency measurement, RPM, etc.)
# sensor:
#   - platform: pulse_counter
#     pin: GPIO1
#     name: "Pulse Counter"
#     update_interval: 60s
#     count_mode:
#       rising_edge: INCREMENT
#       falling_edge: DISABLE

# Rotary encoder (for user input)
# sensor:
#   - platform: rotary_encoder
#     name: "Rotary Encoder"
#     pin_a: GPIO10
#     pin_b: GPIO11
#     resolution: 4  # Pulses per rotation

# ESP32-C6 specific features:
# - WiFi 6 (802.11ax) with OFDMA, TWT, BSS coloring (feature enablement is target-driven in IDF)
# - BLE 5.3 (LE)
# - IEEE 802.15.4 radio for Thread/Zigbee
# - LP RISC-V core for ultra-low power operation
# - 6 LEDC PWM channels with 20-bit resolution
# - 2 I2C, 2 SPI, 2 UART (plus LP_UART) interfaces
# - USB Serial/JTAG for programming and debugging


####################################
# OLD - REMOVE AFTER TESTING
####################################

# (kept unchanged, for reference/testing)
# ####################################
# # Start Substitutions
# ####################################
# substitutions:
#   tx_pin_uart: GPIO5
#   rx_pin_uart: GPIO4
#   light_gpio: GPIO8
#   mic_adc: GPIO2
#   motion_gpio: GPIO7
#   sda_pin_i2c: GPIO21
#   scl_pin_i2c: GPIO22
# ####################################
# # End Substitutions
# ####################################
# esphome:
#   platformio_options:
#     board_build.flash_mode: qio
#     board_build.f_flash: 80000000L
# esp32:
#   board: esp32-c6-devkitc-1
#   variant: esp32c6
#   flash_size: 4MB
#   framework:
#     type: esp-idf
#     version: latest
#     sdkconfig_options:
#       CONFIG_COMPILER_OPTIMIZATION_PERF: y
#       CONFIG_COMPILER_OPTIMIZATION_SIZE: y
#       CONFIG_ESPTOOLPY_FLASHSIZE_4MB: y
#       CONFIG_BT_ENABLED: y
#       CONFIG_BT_BLE_ENABLED: y
#       CONFIG_BT_BLE_42_FEATURES_SUPPORTED: y
#       CONFIG_BT_BLE_50_FEATURES_SUPPORTED: y
#       CONFIG_ESP_TASK_WDT_TIMEOUT_S: "10"
#       CONFIG_ESP_CONSOLE_USB_SERIAL_JTAG: y
#       CONFIG_ESP_CONSOLE_USB_SERIAL_JTAG_ENABLED: y
#       CONFIG_ESP_WIFI_ENABLE_WPA3_SAE: y
#       CONFIG_ESP_WIFI_SOFTAP_SAE_SUPPORT: y
#       CONFIG_ESP_WIFI_ENABLE_WPA3_OWE_STA: y
#       CONFIG_ESP_WIFI_SW_COEXIST_ENABLE: y
#       CONFIG_PM_ENABLE: n
#       CONFIG_ESP_PHY_ENABLE_USB: y
#       CONFIG_ESP_SYSTEM_PANIC_PRINT_REBOOT: y
# uart:
#   id: uart_bus
#   tx_pin: ${tx_pin_uart}
#   rx_pin: ${rx_pin_uart}
#   baud_rate: 256000
#   parity: NONE
#   stop_bits: 1
# light:
#   - platform: binary
#     name: "Blue Status Light"
#     output: light_output
#     id: status_light
#     restore_mode: RESTORE_DEFAULT_ON
# output:
#   - platform: gpio
#     pin: ${light_gpio}
#     id: light_output