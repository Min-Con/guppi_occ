#################################### 
# Start Substitutions 
####################################
substitutions:
  # UART pins - Using available GPIO pins
  # Note: ATOM S3 Lite uses USB for programming/serial, so UART pins are flexible
  tx_pin_uart: GPIO5
  rx_pin_uart: GPIO6
  
  # LED/Light GPIO - ATOM S3 Lite has WS2812C RGB LED on GPIO35
  light_gpio: GPIO35  # WS2812C RGB LED
  
  # ADC pins - ESP32-S3 has many ADC channels
  # Using GPIO38 for microphone ADC (exposed on bottom)
  mic_adc: GPIO38
  
  # Motion sensor GPIO - Using available GPIO
  motion_gpio: GPIO39
  
  # I2C pins - Using HY2.0-4P connector pins
  # G1 and G2 are on the HY2.0 connector
  sda_pin_i2c: GPIO7  # White wire on HY2.0 connector
  scl_pin_i2c: GPIO8  # Yellow wire on HY2.0 connector
  
  # Button GPIO - ATOM S3 Lite has a programmable button on GPIO41
  button_gpio: GPIO41
  
  # IR Transmitter GPIO - Built-in IR LED on GPIO4
  ir_gpio: GPIO4
  
  # Additional exposed GPIO pins on bottom:
  # GPIO5, GPIO6, GPIO7, GPIO8, GPIO38, GPIO39
  
  # Alternative I2C configuration using bottom pins:
  # sda_pin_i2c: GPIO2
  # scl_pin_i2c: GPIO1

#################################### 
# End Substitutions 
####################################

esphome:
  platformio_options:
    build_flags: -DBOARD_HAS_PSRAM
    board_build.flash_mode: qio
    board_build.f_flash: 80000000L

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 8MB
  framework:
    type: esp-idf
    version: recommended
    sdkconfig_options:
      # Performance optimizations
      CONFIG_COMPILER_OPTIMIZATION_PERF: y
      CONFIG_COMPILER_OPTIMIZATION_SIZE: y
      CONFIG_ESPTOOLPY_FLASHSIZE_8MB: y
      # PSRAM configuration - ATOM S3 Lite doesn't have PSRAM
      CONFIG_SPIRAM: n
      # BLE support
      CONFIG_BT_BLE_42_FEATURES_SUPPORTED: y
      CONFIG_BT_BLE_50_FEATURES_SUPPORTED: y
      # Extend the watchdog timeout
      CONFIG_ESP_TASK_WDT_TIMEOUT_S: "10"
      # USB CDC - ATOM S3 Lite has native USB
      CONFIG_ESP_CONSOLE_USB_CDC: y
      CONFIG_ESP_CONSOLE_USB_CDC_SUPPORT_ETS_PRINTF: y
      CONFIG_TINYUSB_CDC_ENABLED: y
      # WiFi compatibility options
      CONFIG_ESP32_WIFI_ENABLE_WPA3_SAE: n
      CONFIG_ESP32_WIFI_ENABLE_WPA3_OWE_STA: n
      CONFIG_ESP32_WIFI_SOFTAP_SAE_SUPPORT: n
      # Disable power management features that can cause auth issues
      CONFIG_ESP32_WIFI_AMPDU_TX_ENABLED: n
      CONFIG_ESP32_WIFI_AMPDU_RX_ENABLED: n
      # ESP32-S3 specific optimizations
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: y
      CONFIG_ESP32S3_SPIRAM_SUPPORT: n

uart:
  id: uart_bus
  tx_pin: ${tx_pin_uart}
  rx_pin: ${rx_pin_uart}
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

# Additional AtomS3 Lite specific configurations
# Onboard RGB LED using ESP32 RMT LED Strip (ESP-IDF v5.x compatible)
light:
  - platform: esp32_rmt_led_strip
    rgb_order: GRB
    pin: ${light_gpio}
    num_leds: 1
    chipset: ws2812
    # rmt_channel parameter removed for ESP-IDF v5.x compatibility (auto-allocated)
    id: status_light
    name: "Status Light"
    internal: true
    restore_mode: ALWAYS_OFF
    effects:
      - addressable_rainbow:
      - addressable_color_wipe:
      - addressable_scan:
      - addressable_flicker:

# light:
#   - platform: status_led
#     id: sys_status
#     pin:
#       number: ${light_gpio}
#     internal: true
#     restore_mode: ALWAYS_OFF


# Onboard Button
binary_sensor:
  - platform: gpio
    name: "Button"
    pin:
      number: ${button_gpio}
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      - delayed_off: 10ms
    on_press:
      then:
        - logger.log: "Button Pressed"

# IR Transmitter (if needed)
# remote_transmitter:
#   pin: ${ir_gpio}
#   carrier_duty_percent: 50%
  # Note: This will use RMT channel 0

# I2C Bus (Grove connector)
i2c:
  sda: ${sda_pin_i2c}
  scl: ${scl_pin_i2c}
  scan: true
  id: bus_a

# Available GPIO pins for expansion:
# GPIO5, GPIO6, GPIO7, GPIO8, GPIO38, GPIO39
# Note: GPIO43/GPIO44 are available but check for UART conflicts
# Note: GPIO35 is used by RGB LED
# Note: GPIO41 is used by button
# Note: GPIO4 is used by IR LED
# Note: GPIO1/GPIO2 are used by I2C

# Example sensor using available GPIO
# binary_sensor:
#   - platform: gpio
#     name: "Motion Sensor"
#     pin:
#       number: ${motion_gpio}
#       mode:
#         input: true
#         pullup: true