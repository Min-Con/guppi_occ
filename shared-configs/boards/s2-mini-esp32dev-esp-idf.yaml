####################################
# Start Substitutions
####################################

substitutions:
  # UART pins - ESP32-S2 Mini uses different UART pins than classic ESP32
  # UART0 is typically used for programming, UART1 for peripherals
  tx_pin_uart: GPIO17  # TXD1
  rx_pin_uart: GPIO18  # RXD1
  
  # LED/Light GPIO - ESP32-S2 Mini typically has RGB LED on GPIO18
  # Note: Some S2 Mini boards have WS2812 RGB LED, others have simple LED
  light_gpio: GPIO15  # Safe GPIO, commonly used for LED on S2 Mini
  
  # ADC pin - ESP32-S2 has different ADC layout than classic ESP32
  # ESP32-S2 ADC pins: GPIO1-GPIO20 (ADC1), no ADC2 available
  mic_adc: GPIO1  # ADC1_CH0 (input capable)
  
  # Motion sensor GPIO - Using available GPIO (moved from GPIO8 due to I2C)
  motion_gpio: GPIO9
  
  # I2C pins - ESP32-S2 Mini I2C pins (using your working configuration)
  sda_pin_i2c: GPIO7   # Your working SDA pin
  scl_pin_i2c: GPIO8   # Your working SCL pin
  
  # Additional safe GPIO pins available on ESP32-S2 Mini:
  # GPIO1-GPIO21 (most are available, check specific board)
  # GPIO33-GPIO45 (available on some variants)
  
  # Input-capable pins with ADC:
  # GPIO1-GPIO20 (ADC1 channels)
  
  # Pins to avoid:
  # GPIO0 - Boot/Programming (has pull-up)
  # GPIO19, GPIO20 - USB D+/D- (if using native USB)
  # GPIO26 - Connected to flash on some boards
  # GPIO45 - Boot strapping pin on some variants
  
  # Alternative configurations:
  # If you need different UART pins:
  # tx_pin_uart: GPIO43  # Alternative UART
  # rx_pin_uart: GPIO44  # Alternative UART
  
  # Alternative I2C pins (most GPIO can be I2C):
  # sda_pin_i2c: GPIO3  # Alternative I2C SDA
  # scl_pin_i2c: GPIO4  # Alternative I2C SCL
  
  # SPI pins (if needed):
  # mosi_pin: GPIO11  # MOSI
  # miso_pin: GPIO13  # MISO
  # sck_pin: GPIO12   # SCK
  # cs_pin: GPIO10    # SS/CS
  
  # Native USB pins (if using USB CDC):
  # USB_D_PLUS: GPIO20
  # USB_D_MINUS: GPIO19

####################################
# End Substitutions
####################################

esphome:
  platformio_options:
    board_build.flash_mode: qio
    board_build.f_flash: 80000000L  # S2 can handle higher flash frequency

esp32:
  board: esp32-s2-saola-1  # Most compatible board type for S2 Mini variants
  variant: esp32s2
  flash_size: 4MB
  framework:
    # ESP-IDF is recommended for ESP32-S2 for better feature support
    type: esp-idf
    version: recommended
    sdkconfig_options:
      # Performance optimizations
      CONFIG_COMPILER_OPTIMIZATION_PERF: y
      CONFIG_COMPILER_OPTIMIZATION_SIZE: y
      CONFIG_ESPTOOLPY_FLASHSIZE_4MB: y
      
      # Note: ESP32-S2 does NOT have Bluetooth/BLE support
      # All BLE configurations removed
      
      # Extend the watchdog timeout
      CONFIG_ESP_TASK_WDT_TIMEOUT_S: "10"
      
      # WiFi compatibility options for WPA3/mesh networks
      CONFIG_ESP32_WIFI_ENABLE_WPA3_SAE: n
      CONFIG_ESP32_WIFI_ENABLE_WPA3_OWE_STA: n
      CONFIG_ESP32_WIFI_SOFTAP_SAE_SUPPORT: n
      
      # Disable power management features that can cause auth issues
      CONFIG_ESP32_WIFI_AMPDU_TX_ENABLED: n
      CONFIG_ESP32_WIFI_AMPDU_RX_ENABLED: n
      
      # ESP32-S2 specific optimizations
      CONFIG_ESP32S2_DEFAULT_CPU_FREQ_240: y
      
      # USB CDC On Boot - ESP32-S2 Mini has native USB support
      CONFIG_ESP_CONSOLE_USB_CDC: y
      CONFIG_ESP_CONSOLE_USB_CDC_SUPPORT_ETS_PRINTF: y

# ESP32-S2 supports PSRAM (if available on your specific board)
psram:
  mode: quad
  speed: 80MHz

# Light configuration - check if your S2 Mini has RGB LED or simple LED
# Option 1: For boards with WS2812 RGB LED (uncomment if applicable)
# light:
#   - platform: esp32_rmt_led_strip
#     rgb_order: GRB
#     pin: ${light_gpio}
#     num_leds: 1
#     chipset: ws2812
#     id: status_light
#     name: "Status Light"
#     internal: true
#     restore_mode: ALWAYS_OFF
#     effects:
#       - addressable_rainbow:
#       - addressable_color_wipe:
#       - addressable_scan:
#       - addressable_flicker:

# Option 2: For boards with simple LED (default)
light:
  - platform: binary
    name: "Status Light"
    output: light_output
    id: status_light
    restore_mode: ALWAYS_OFF

output:
  - platform: gpio
    pin: ${light_gpio}
    id: light_output

uart:
  id: uart_bus
  tx_pin: ${tx_pin_uart}
  rx_pin: ${rx_pin_uart}
  baud_rate: 256000
  parity: NONE
  stop_bits: 1
#  data_bits: 8